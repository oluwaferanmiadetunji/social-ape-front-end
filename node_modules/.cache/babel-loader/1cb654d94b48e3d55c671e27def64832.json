{"ast":null,"code":"var _jsxFileName = \"/home/afe/Documents/project/Social Ape/social-ape-client/src/components/ScreamDialog.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\"; //MUI\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LikeButton from \"./LikeButton\"; // Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\"; //REDUX\n\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\n\nconst styles = theme => ({ ...theme.classes,\n  invisibleSperator: {\n    border: \"none\",\n    margin: 4\n  },\n  profileImage: {\n    maxWidth: 200,\n    maxHeight: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  DialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginBottom: 50,\n    marginTop: 50\n  }\n});\n\nclass ScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 100,\n      thickness: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: userImage,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: Link,\n      variant: \"h5\",\n      to: `/users/${userHandle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"@\", userHandle), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.invisibleSperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.invisibleSperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, body), /*#__PURE__*/React.createElement(LikeButton, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand scream\",\n      tipClassName: classes.expandButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.DialogContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, dialogMarkup)));\n  }\n\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToState = {\n  getScream\n};\nexport default connect(mapStateToProps, mapActionsToState)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/home/afe/Documents/project/Social Ape/social-ape-client/src/components/ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","Dialog","DialogContent","CircularProgress","Grid","Typography","LikeButton","CloseIcon","UnfoldMore","connect","getScream","styles","theme","classes","invisibleSperator","border","margin","profileImage","maxWidth","maxHeight","borderRadius","objectFit","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginBottom","marginTop","ScreamDialog","state","open","handleOpen","setState","props","screamId","handleClose","render","scream","body","createdAt","likeCount","commentCount","userImage","userHandle","UI","loading","dialogMarkup","format","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToState"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\n\n//MUI\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LikeButton from \"./LikeButton\";\n\n// Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\n\n//REDUX\nimport { connect } from \"react-redux\";\nimport { getScream } from \"../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme.classes,\n  invisibleSperator: {\n    border: \"none\",\n    margin: 4,\n  },\n  profileImage: {\n    maxWidth: 200,\n    maxHeight: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n  },\n  DialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  spinnerDiv: {\n    textAlign: 'center',\n    marginBottom: 50,\n    marginTop: 50,\n  },\n});\n\nclass ScreamDialog extends Component {\n  state = {\n    open: false,\n  };\n  handleOpen = () => {\n    this.setState({ open: true });\n    this.props.getScream(this.props.screamId);\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n      },\n      UI: { loading },\n    } = this.props;\n\n    const dialogMarkup = loading ? (\n      <div className={classes.spinnerDiv}>\n        <CircularProgress size={100} thickness={2} />\n      </div>\n    ) : (\n      \n      <Grid container>\n        <Grid item sm={5}>\n          <img src={userImage} alt='Profile' className={classes.profileImage} />\n        </Grid>\n        <Grid item sm={7}>\n          <Typography\n            component={Link}\n            variant='h5'\n            to={`/users/${userHandle}`}>\n            @{userHandle}\n          </Typography>\n          <hr className={classes.invisibleSperator} />\n          <Typography variant='body2' color='textSecondary'>\n            {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n          </Typography>\n          <hr className={classes.invisibleSperator} />\n          <Typography variant=\"body1\">\n            {body}\n          </Typography>\n          <LikeButton screamId={screamId} />\n          \n        </Grid>\n      </Grid>\n    );\n    return (\n      <Fragment>\n        <MyButton\n          onClick={this.handleOpen}\n          tip='Expand scream'\n          tipClassName={classes.expandButton}>\n          <UnfoldMore color='primary' />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth='sm'>\n          <MyButton\n            tip='Close'\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}>\n            <CloseIcon />\n          </MyButton>\n          <DialogContent className={classes.DialogContent}>\n            {dialogMarkup}\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scream: state.data.scream,\n  UI: state.UI,\n});\n\nconst mapActionsToState = {\n  getScream,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToState,\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}