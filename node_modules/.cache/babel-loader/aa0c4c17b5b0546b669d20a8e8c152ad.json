{"ast":null,"code":"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport MyButton from '../util/MyButton';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom'; //MUI\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; // Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\"; //REDUX\n\nimport { connect } from 'react-redux';\nimport { getScream } from '../redux/actions/dataActions';\nconst styles = {};\n\nclass ScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n  }\n\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToState = {\n  getScream\n};\nexport default connect(mapStateToProps, mapActionsToState)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/home/afe/Documents/project/Social Ape/social-ape-client/src/components/ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","Button","TextField","Dialog","DialogContent","DialogTitle","CircularProgress","Grid","Typography","CloseIcon","connect","getScream","styles","ScreamDialog","state","open","handleOpen","setState","props","screamId","handleClose","render","classes","scream","body","createdAt","likeCount","commentCount","userImage","userHandle","UI","loading","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToState"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,MAAMC,MAAM,GAAG,EAAf;;AAIA,MAAMC,YAAN,SAA2BnB,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCoB,KADmC,GAC3B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD2B;;AAAA,SAInCC,UAJmC,GAItB,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACA,WAAKG,KAAL,CAAWP,SAAX,CAAqB,KAAKO,KAAL,CAAWC,QAAhC;AACD,KAPkC;;AAAA,SAQnCC,WARmC,GAQrB,MAAM;AAClB,WAAKH,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAVkC;AAAA;;AAWnCM,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,OADI;AACKC,MAAAA,MAAM,EAAE;AAAEJ,QAAAA,QAAF;AAAYK,QAAAA,IAAZ;AAAkBC,QAAAA,SAAlB;AAA6BC,QAAAA,SAA7B;AAAwCC,QAAAA,YAAxC;AAAsDC,QAAAA,SAAtD;AAAiEC,QAAAA;AAAjE,OADb;AAC4FC,MAAAA,EAAE,EAAE;AAACC,QAAAA;AAAD;AADhG,QAC6G,KAAKb,KADxH;AAED;;AAdkC;;AAkBrCL,YAAY,CAACmB,SAAb,GAAyB;AACvBrB,EAAAA,SAAS,EAAEf,SAAS,CAACqC,IAAV,CAAeC,UADH;AAEvBf,EAAAA,QAAQ,EAAEvB,SAAS,CAACuC,MAAV,CAAiBD,UAFJ;AAGvBL,EAAAA,UAAU,EAAEjC,SAAS,CAACuC,MAAV,CAAiBD,UAHN;AAIvBX,EAAAA,MAAM,EAAE3B,SAAS,CAACwC,MAAV,CAAiBF,UAJF;AAKvBJ,EAAAA,EAAE,EAAElC,SAAS,CAACwC,MAAV,CAAiBF;AALE,CAAzB;;AAQA,MAAMG,eAAe,GAAIvB,KAAD,KAAW;AACjCS,EAAAA,MAAM,EAAET,KAAK,CAACwB,IAAN,CAAWf,MADc;AAEjCO,EAAAA,EAAE,EAAEhB,KAAK,CAACgB;AAFuB,CAAX,CAAxB;;AAKA,MAAMS,iBAAiB,GAAG;AACxB5B,EAAAA;AADwB,CAA1B;AAIA,eAAeD,OAAO,CACpB2B,eADoB,EAEpBE,iBAFoB,CAAP,CAGb1C,UAAU,CAACe,MAAD,CAAV,CAAmBC,YAAnB,CAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport MyButton from '../util/MyButton'\nimport dayjs from 'dayjs'\nimport { Link } from 'react-router-dom'\n\n//MUI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\n\n// Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\n\n//REDUX\nimport { connect } from 'react-redux'\nimport { getScream } from '../redux/actions/dataActions'\n\nconst styles = {\n\n}\n\nclass ScreamDialog extends Component {\n  state = {\n    open: false,\n  };\n  handleOpen = () => {\n    this.setState({ open: true });\n    this.props.getScream(this.props.screamId)\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n  render() {\n    const { \n      classes, scream: { screamId, body, createdAt, likeCount, commentCount, userImage, userHandle }, UI: {loading}} = this.props\n  }\n\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) =>({\n  scream: state.data.scream,\n  UI: state.UI\n})\n\nconst mapActionsToState = {\n  getScream\n}\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToState,\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}