{"ast":null,"code":"var _jsxFileName = \"/home/afe/Documents/project/Social Ape/social-ape-client/src/components/scream/ScreamDialog.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\"; //MUI\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; // Icons\n\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\"; //REDUX\n\nimport { connect } from \"react-redux\";\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = theme => ({ ...theme.classes,\n  profileImage: {\n    maxWidth: 200,\n    maxHeight: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  DialogContent: {\n    padding: 20\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\"\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginBottom: 50,\n    marginTop: 50\n  }\n});\n\nclass ScreamDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      oldPath: '',\n      newPath: ''\n    };\n\n    this.handleOpen = () => {\n      let oldPath = window.location.pathname;\n      const {\n        userHandle,\n        screamId\n      } = this.props;\n      const newPath = `/users/${userHandle}/scream/${screamId}`;\n      window.history.pushState(null, null, newPath);\n      this.setState({\n        open: true,\n        oldPath,\n        newPath\n      });\n      this.props.getScream(this.props.screamId);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n      this.props.clearErrors();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n        comments\n      },\n      UI: {\n        loading\n      }\n    } = this.props;\n    const dialogMarkup = loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.spinnerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 100,\n      thickness: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: userImage,\n      alt: \"Profile\",\n      className: classes.profileImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      component: Link,\n      variant: \"h5\",\n      to: `/users/${userHandle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"@\", userHandle), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.invisibleSperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.invisibleSperator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, body), /*#__PURE__*/React.createElement(LikeButton, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, likeCount, \" Likes\"), /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ChatIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, commentCount, \" Comments\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: classes.visibleSeprator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CommentForm, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Comments, {\n      comments: comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      onClick: this.handleOpen,\n      tip: \"Expand scream\",\n      tipClassName: classes.expandButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UnfoldMore, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      fullWidth: true,\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Close\",\n      onClick: this.handleClose,\n      tipClassName: classes.closeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(DialogContent, {\n      className: classes.DialogContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, dialogMarkup)));\n  }\n\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  scream: state.data.scream,\n  UI: state.UI\n});\n\nconst mapActionsToState = {\n  getScream,\n  clearErrors\n};\nexport default connect(mapStateToProps, mapActionsToState)(withStyles(styles)(ScreamDialog));","map":{"version":3,"sources":["/home/afe/Documents/project/Social Ape/social-ape-client/src/components/scream/ScreamDialog.js"],"names":["React","Component","Fragment","PropTypes","withStyles","MyButton","dayjs","Link","LikeButton","Comments","CommentForm","Dialog","DialogContent","CircularProgress","Grid","Typography","CloseIcon","UnfoldMore","ChatIcon","connect","getScream","clearErrors","styles","theme","classes","profileImage","maxWidth","maxHeight","borderRadius","objectFit","padding","closeButton","position","left","expandButton","spinnerDiv","textAlign","marginBottom","marginTop","ScreamDialog","state","open","oldPath","newPath","handleOpen","window","location","pathname","userHandle","screamId","props","history","pushState","setState","handleClose","componentDidMount","openDialog","render","scream","body","createdAt","likeCount","commentCount","userImage","comments","UI","loading","dialogMarkup","invisibleSperator","format","visibleSeprator","propTypes","func","isRequired","string","object","mapStateToProps","data","mapActionsToState"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport MyButton from \"../../util/MyButton\";\nimport dayjs from \"dayjs\";\nimport { Link } from \"react-router-dom\";\nimport LikeButton from \"./LikeButton\";\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\";\n\n//MUI\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Icons\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport UnfoldMore from \"@material-ui/icons/UnfoldMore\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n\n//REDUX\nimport { connect } from \"react-redux\";\nimport { getScream, clearErrors } from \"../../redux/actions/dataActions\";\n\nconst styles = (theme) => ({\n  ...theme.classes,\n  profileImage: {\n    maxWidth: 200,\n    maxHeight: 200,\n    borderRadius: \"50%\",\n    objectFit: \"cover\",\n  },\n  DialogContent: {\n    padding: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  expandButton: {\n    position: \"absolute\",\n    left: \"90%\",\n  },\n  spinnerDiv: {\n    textAlign: \"center\",\n    marginBottom: 50,\n    marginTop: 50,\n  },\n});\n\nclass ScreamDialog extends Component {\n  state = {\n    open: false,\n    oldPath: '',\n    newPath: ''\n  };\n  componentDidMount() {\n    if (this.props.openDialog) {\n      this.handleOpen();\n    }\n  }\n  handleOpen = () => {\n    let oldPath = window.location.pathname;\n\n    const { userHandle, screamId } = this.props;\n    const newPath = `/users/${userHandle}/scream/${screamId}`\n\n    window.history.pushState(null, null, newPath)\n\n    this.setState({ open: true, oldPath, newPath });\n    this.props.getScream(this.props.screamId);\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n    this.props.clearErrors();\n  };\n  render() {\n    const {\n      classes,\n      scream: {\n        screamId,\n        body,\n        createdAt,\n        likeCount,\n        commentCount,\n        userImage,\n        userHandle,\n        comments,\n      },\n      UI: { loading },\n    } = this.props;\n\n    const dialogMarkup = loading ? (\n      <div className={classes.spinnerDiv}>\n        <CircularProgress size={100} thickness={2} />\n      </div>\n    ) : (\n      <Grid container>\n        <Grid item sm={5}>\n          <img src={userImage} alt='Profile' className={classes.profileImage} />\n        </Grid>\n        <Grid item sm={7}>\n          <Typography component={Link} variant='h5' to={`/users/${userHandle}`}>\n            @{userHandle}\n          </Typography>\n          <hr className={classes.invisibleSperator} />\n          <Typography variant='body2' color='textSecondary'>\n            {dayjs(createdAt).format(\"h:mm a, MMMM DD YYYY\")}\n          </Typography>\n          <hr className={classes.invisibleSperator} />\n          <Typography variant='body1'>{body}</Typography>\n          <LikeButton screamId={screamId} />\n          <span>{likeCount} Likes</span>\n          <MyButton tip='comments'>\n            <ChatIcon color='primary' />\n          </MyButton>\n          <span>{commentCount} Comments</span>\n        </Grid>\n        <hr className={classes.visibleSeprator} />\n        <CommentForm screamId={screamId} />\n        <Comments comments={comments} />\n      </Grid>\n    );\n    return (\n      <Fragment>\n        <MyButton\n          onClick={this.handleOpen}\n          tip='Expand scream'\n          tipClassName={classes.expandButton}>\n          <UnfoldMore color='primary' />\n        </MyButton>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          fullWidth\n          maxWidth='sm'>\n          <MyButton\n            tip='Close'\n            onClick={this.handleClose}\n            tipClassName={classes.closeButton}>\n            <CloseIcon />\n          </MyButton>\n          <DialogContent className={classes.DialogContent}>\n            {dialogMarkup}\n          </DialogContent>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nScreamDialog.propTypes = {\n  getScream: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  screamId: PropTypes.string.isRequired,\n  userHandle: PropTypes.string.isRequired,\n  scream: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scream: state.data.scream,\n  UI: state.UI,\n});\n\nconst mapActionsToState = {\n  getScream,\n  clearErrors,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapActionsToState,\n)(withStyles(styles)(ScreamDialog));\n"]},"metadata":{},"sourceType":"module"}