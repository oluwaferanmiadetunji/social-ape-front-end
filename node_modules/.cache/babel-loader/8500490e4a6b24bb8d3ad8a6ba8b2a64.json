{"ast":null,"code":"var _jsxFileName = \"/home/afe/Documents/project/Social Ape/social-ape-client/src/pages/signup.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'; //MUI\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress'; // REDUX\n\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = theme => ({ ...theme.classes\n});\n\nclass signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      this.props.signupUser(newUserData, this.props.history);\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      UI: {\n        loading\n      }\n    } = this.props;\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: classes.form,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      className: classes.pageTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Signup\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"email\",\n      label: \"Email...\",\n      variant: \"outlined\",\n      type: \"email\",\n      helperText: errors.email,\n      error: errors.email ? true : false,\n      className: classes.textfield,\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      fullWidth: true,\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"handle\",\n      label: \"Handle...\",\n      variant: \"outlined\",\n      type: \"text\",\n      helperText: errors.handle,\n      error: errors.handle ? true : false,\n      className: classes.textfield,\n      name: \"handle\",\n      value: this.state.handle,\n      onChange: this.handleChange,\n      fullWidth: true,\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      label: \"Password...\",\n      variant: \"outlined\",\n      type: \"password\",\n      helperText: errors.password,\n      error: errors.password ? true : false,\n      className: classes.textfield,\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      fullWidth: true,\n      autoComplete: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"confirmPassword\",\n      label: \"Confirm Password...\",\n      variant: \"outlined\",\n      type: \"password\",\n      helperText: errors.confirmPassword,\n      error: errors.confirmPassword ? true : false,\n      className: classes.textfield,\n      name: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), errors.general && /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: classes.customError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, errors.general), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, \"Signup\", loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      className: classes.progress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"Already have an account? Login \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 46\n      }\n    }, \"here\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  UI: state.UI\n});\n\nconst mapActionsToProps = {\n  signupUser\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(signup));","map":{"version":3,"sources":["/home/afe/Documents/project/Social Ape/social-ape-client/src/pages/signup.js"],"names":["React","Component","PropTypes","Link","withStyles","Grid","Typography","TextField","Button","CircularProgress","connect","signupUser","styles","theme","classes","signup","constructor","props","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","history","handleChange","target","name","value","errors","componentWillReceiveProps","nextProps","UI","render","form","pageTitle","textfield","general","customError","button","progress","propTypes","object","isRequired","func","user","mapStateToProps","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n//MUI\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\n// REDUX\nimport { connect } from 'react-redux';\nimport { signupUser } from '../redux/actions/userActions';\n\nconst styles = (theme) => ({\n  ...theme.classes\n})\n\nclass signup extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      errors: {}\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(nextProps.UI.errors) {\n      this.setState({\n        errors: nextProps.UI.errors\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      loading: true\n    });\n    const newUserData = {\n      email: this.state.email,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      handle: this.state.handle,\n    };\n    this.props.signupUser(newUserData, this.props.history)\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  \n  render() {\n    const { classes, UI: { loading } } = this.props;\n    const { errors } = this.state;\n    return (\n      <Grid container className={classes.form}>\n        <Grid item sm />\n        <Grid item sm>\n          <Typography variant='h5' className={classes.pageTitle}>\n            Signup\n          </Typography>\n          <form noValidate onSubmit={this.handleSubmit}>\n            <TextField\n              id='email'\n              label='Email...'\n              variant='outlined'\n              type='email'\n              helperText={errors.email}\n              error={errors.email ? true : false}\n              className={classes.textfield}\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n              fullWidth\n              autoComplete\n            />\n\n            <TextField\n              id='handle'\n              label='Handle...'\n              variant='outlined'\n              type='text'\n              helperText={errors.handle}\n              error={errors.handle ? true : false}\n              className={classes.textfield}\n              name='handle'\n              value={this.state.handle}\n              onChange={this.handleChange}\n              fullWidth\n              autoComplete\n            />\n\n            <TextField\n              id='password'\n              label='Password...'\n              variant='outlined'\n              type='password'\n              helperText={errors.password}\n              error={errors.password ? true : false}\n              className={classes.textfield}\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n              fullWidth\n              autoComplete\n            />\n\n            <TextField\n              id='confirmPassword'\n              label='Confirm Password...'\n              variant='outlined'\n              type='password'\n              helperText={errors.confirmPassword}\n              error={errors.confirmPassword ? true : false}\n              className={classes.textfield}\n              name='confirmPassword'\n              value={this.state.confirmPassword}\n              onChange={this.handleChange}\n              fullWidth\n            />\n\n            {errors.general && (\n              <Typography variant='body2' className={classes.customError}>\n                {errors.general}\n              </Typography>\n            )}\n\n            <Button\n              type='submit'\n              variant='contained'\n              color='primary'\n              className={classes.button}\n              disabled={loading}>\n              Signup\n              {loading && <CircularProgress className={classes.progress} />}\n            </Button>\n            <br />\n\n            <small>\n              Already have an account? Login <Link to='/login'>here</Link>\n            </small>\n          </form>\n        </Grid>\n        <Grid item sm />\n      </Grid>\n    );\n  }\n}\n\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired,\n  signupUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  UI: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  UI: state.UI\n})\n\nconst mapActionsToProps = {\n  signupUser\n};\n\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(signup));\n"]},"metadata":{},"sourceType":"module"}