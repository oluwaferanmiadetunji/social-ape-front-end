{"ast":null,"code":"import _classCallCheck from\"/home/afe/Documents/project/Social Ape/social-ape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/afe/Documents/project/Social Ape/social-ape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/afe/Documents/project/Social Ape/social-ape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/afe/Documents/project/Social Ape/social-ape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component,Fragment}from\"react\";import{Link}from\"react-router-dom\";import dayjs from\"dayjs\";import relativeTime from\"dayjs/plugin/relativeTime\";//MUI\nimport Menu from\"@material-ui/core/Menu\";import MenuItem from\"@material-ui/core/MenuItem\";import IconButton from\"@material-ui/core/IconButton\";import Tooltip from\"@material-ui/core/Tooltip\";import Typography from\"@material-ui/core/Typography\";import Badge from\"@material-ui/core/Badge\";//Icons\nimport NotificationsIcon from\"@material-ui/icons/Notifications\";import FavoriteIcon from\"@material-ui/icons/Favorite\";import ChatIcon from\"@material-ui/icons/Chat\";//Redux\nimport{connect}from\"react-redux\";import{markNotificationsRead}from\"../../redux/actions/userActions\";var Notifications=/*#__PURE__*/function(_Component){_inherits(Notifications,_Component);var _super=_createSuper(Notifications);function Notifications(){var _this;_classCallCheck(this,Notifications);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={anchorEl:null};_this.handleOpen=function(event){_this.setState({anchorEl:event.target});};_this.handleClose=function(){_this.setState({anchorEl:null});};_this.onMenuOpened=function(){var unreadNotificationsId=_this.props.notifications.filter(function(not){return!not.read;}).map(function(not){return not.notificationId;});_this.props.markNotificationsRead(unreadNotificationsId);};return _this;}_createClass(Notifications,[{key:\"render\",value:function render(){var _this2=this;var notifications=this.props.notifications;var anchorEl=this.state.anchorEl;dayjs.extend(relativeTime);var notificationsIcon;if(notifications&&notifications.length>0){notifications.filter(function(not){return not.read===false;}).length>0?notificationsIcon=/*#__PURE__*/React.createElement(Badge,{badgeContent:notifications.filter(function(not){return not.read===false;}).length,color:\"secondary\"},/*#__PURE__*/React.createElement(NotificationsIcon,null)):notificationsIcon=/*#__PURE__*/React.createElement(NotificationsIcon,null);}else{notificationsIcon=/*#__PURE__*/React.createElement(NotificationsIcon,null);}var notificationsMarkup=notifications&&notifications.length>0?notifications.map(function(not){var verb=not.type===\"like\"?\"liked\":\"commented on\";var time=dayjs(not.createdAt).fromNow();var iconColor=not.read?\"primary\":\"secondary\";var icon=not.type===\"like\"?/*#__PURE__*/React.createElement(FavoriteIcon,{color:iconColor,style:{marginRight:10}}):/*#__PURE__*/React.createElement(ChatIcon,{color:iconColor,style:{marginRight:10}});return/*#__PURE__*/React.createElement(MenuItem,{key:not.createdAt,onClick:_this2.handleClose},icon,/*#__PURE__*/React.createElement(Typography,{component:Link,color:\"inherit\",variant:\"body1\",to:\"/users/\".concat(not.recipient,\"/scream/\").concat(not.screamId)},not.sender,\" \",verb,\" your scream \",time));}):/*#__PURE__*/React.createElement(MenuItem,{onClick:this.handleClose},\"You have no notifications yet\");return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Tooltip,{placement:\"top\",title:\"Notifications\"},/*#__PURE__*/React.createElement(IconButton,{\"aria-owns\":anchorEl?\"simple-menu\":undefined,\"aria-haspopup\":\"true\",onClick:this.handleOpen},notificationsIcon)),/*#__PURE__*/React.createElement(Menu,{anchorEl:anchorEl,open:Boolean(anchorEl),onClose:this.handleClose,onEntered:this.onMenuOpened},notificationsMarkup));}}]);return Notifications;}(Component);var mapStateToProps=function mapStateToProps(state){return{notifications:state.user.notifications};};export default connect(mapStateToProps,{markNotificationsRead:markNotificationsRead})(Notifications);","map":{"version":3,"sources":["/home/afe/Documents/project/Social Ape/social-ape-client/src/components/layout/Notifications.js"],"names":["React","Component","Fragment","Link","dayjs","relativeTime","Menu","MenuItem","IconButton","Tooltip","Typography","Badge","NotificationsIcon","FavoriteIcon","ChatIcon","connect","markNotificationsRead","Notifications","state","anchorEl","handleOpen","event","setState","target","handleClose","onMenuOpened","unreadNotificationsId","props","notifications","filter","not","read","map","notificationId","extend","notificationsIcon","length","notificationsMarkup","verb","type","time","createdAt","fromNow","iconColor","icon","marginRight","recipient","screamId","sender","undefined","Boolean","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport PropTypes from \"prop-types\";\n//MUI\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\n//Icons\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\n//Redux\nimport { connect } from \"react-redux\";\nimport { markNotificationsRead } from \"../../redux/actions/userActions\";\n\nclass Notifications extends Component {\n  state = {\n    anchorEl: null,\n  };\n  handleOpen = (event) => {\n    this.setState({\n      anchorEl: event.target,\n    });\n  };\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n    });\n  };\n  onMenuOpened = () => {\n    let unreadNotificationsId = this.props.notifications\n      .filter((not) => !not.read)\n      .map((not) => not.notificationId);\n    this.props.markNotificationsRead(unreadNotificationsId)\n  };\n  render() {\n    const { notifications } = this.props;\n    const { anchorEl } = this.state;\n    dayjs.extend(relativeTime);\n\n    let notificationsIcon;\n    if (notifications && notifications.length > 0) {\n      notifications.filter((not) => not.read === false).length > 0\n        ? (notificationsIcon = (\n            <Badge\n              badgeContent={\n                notifications.filter((not) => not.read === false).length\n              }\n              color='secondary'>\n              <NotificationsIcon />\n            </Badge>\n          ))\n        : (notificationsIcon = <NotificationsIcon />);\n    } else {\n      notificationsIcon = <NotificationsIcon />;\n    }\n    let notificationsMarkup =\n      notifications && notifications.length > 0 ? (\n        notifications.map((not) => {\n          const verb = not.type === \"like\" ? \"liked\" : \"commented on\";\n          const time = dayjs(not.createdAt).fromNow();\n          const iconColor = not.read ? \"primary\" : \"secondary\";\n          const icon =\n            not.type === \"like\" ? (\n              <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\n            ) : (\n              <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\n            );\n\n          return (\n            <MenuItem key={not.createdAt} onClick={this.handleClose}>\n              {icon}\n              <Typography\n                component={Link}\n                color='inherit'\n                variant='body1'\n                to={`/users/${not.recipient}/scream/${not.screamId}`}>\n                {not.sender} {verb} your scream {time}\n              </Typography>\n            </MenuItem>\n          );\n        })\n      ) : (\n        <MenuItem onClick={this.handleClose}>\n          You have no notifications yet\n        </MenuItem>\n      );\n    return (\n      <Fragment>\n        <Tooltip placement='top' title='Notifications'>\n          <IconButton\n            aria-owns={anchorEl ? \"simple-menu\" : undefined}\n            aria-haspopup='true'\n            onClick={this.handleOpen}>\n            {notificationsIcon}\n          </IconButton>\n        </Tooltip>\n        <Menu\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n          onEntered={this.onMenuOpened}>\n          {notificationsMarkup}\n        </Menu>\n      </Fragment>\n    );\n  }\n}\n\nNotifications.propTypes = {\n  markNotificationsRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  notifications: state.user.notifications,\n});\n\nexport default connect(mapStateToProps, { markNotificationsRead })(\n  Notifications,\n);\n"]},"metadata":{},"sourceType":"module"}