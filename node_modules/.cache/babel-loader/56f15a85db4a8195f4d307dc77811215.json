{"ast":null,"code":"var _jsxFileName = \"/home/afe/Documents/project/social-ape/social-ape-client/src/components/Scream.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport myButton from '../util/myButton'; //REDUX\n\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../redux/actions/dataActions'; //MUI\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Typography } from '@material-ui/core'; //Icons\n\nimport ChatIcon from '@material-ui/icons/Chat';\nconst styles = {\n  card: {\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n};\n\nclass Scream extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.likedScream = () => {\n      if (this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.scream.screamId)) return true;else return false;\n    };\n\n    this.likeScream = () => {};\n  }\n\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        screamId,\n        likeCount,\n        commentCount\n      }\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      image: userImage,\n      className: classes.image,\n      title: \"Profile Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: Link,\n      to: `/users/${userHandle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, userHandle), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, dayjs(createdAt).fromNow()), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, body), likeButton, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, likeCount, \" Likes\"), /*#__PURE__*/React.createElement(\"myButton\", {\n      tip: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ChatIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, commentCount, \" Comments\")));\n  }\n\n}\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));","map":{"version":3,"sources":["/home/afe/Documents/project/social-ape/social-ape-client/src/components/Scream.js"],"names":["React","Component","Link","dayjs","relativeTime","PropTypes","myButton","connect","likeScream","unlikeScream","withStyles","Card","CardContent","CardMedia","Typography","ChatIcon","styles","card","display","marginBottom","image","minWidth","content","padding","objectFit","Scream","likedScream","props","user","likes","find","like","screamId","scream","render","extend","classes","body","createdAt","userImage","userHandle","likeCount","commentCount","fromNow","likeButton","propTypes","object","isRequired","func","mapStateToProps","state","mapActionsToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,8BAAzC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,YAAY,EAAE;AAFV,GADO;AAKbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GALM;AAQbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,SAAS,EAAE;AAFJ;AARI,CAAf;;AAcA,MAAMC,MAAN,SAAqBxB,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC7ByB,WAD6B,GACf,MAAM;AAClB,UACE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,IACA,KAAKF,KAAL,CAAWC,IAAX,CAAgBC,KAAhB,CAAsBC,IAAtB,CACGC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkB,KAAKL,KAAL,CAAWM,MAAX,CAAkBD,QADhD,CAFF,EAME,OAAO,IAAP,CANF,KAOK,OAAO,KAAP;AACN,KAV4B;;AAAA,SAW7BxB,UAX6B,GAWhB,MAAM,CAElB,CAb4B;AAAA;;AAc7B0B,EAAAA,MAAM,GAAG;AACP/B,IAAAA,KAAK,CAACgC,MAAN,CAAa/B,YAAb;AACA,UAAM;AAAEgC,MAAAA,OAAF;AAAWH,MAAAA,MAAM,EAAG;AAAEI,QAAAA,IAAF;AAAQC,QAAAA,SAAR;AAAmBC,QAAAA,SAAnB;AAA8BC,QAAAA,UAA9B;AAA0CR,QAAAA,QAA1C;AAAoDS,QAAAA,SAApD;AAA+DC,QAAAA;AAA/D;AAApB,QAAsG,KAAKf,KAAjH;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAES,OAAO,CAACnB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACA,MAAA,KAAK,EAAEsB,SADP;AAEA,MAAA,SAAS,EAAEH,OAAO,CAAChB,KAFnB;AAGA,MAAA,KAAK,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAEgB,OAAO,CAACd,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,SAAS,EAAEpB,IAFb;AAGE,MAAA,EAAE,EAAG,UAASsC,UAAW,EAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKA,UALL,CADF,eAQE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,KAAK,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDrC,KAAK,CAACmC,SAAD,CAAL,CAAiBK,OAAjB,EAAnD,CARF,eASE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BN,IAA7B,CATF,EAUGO,UAVH,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,SAAP,WAXF,eAYE;AAAU,MAAA,GAAG,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAaE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,YAAP,cAdF,CALF,CADF;AAwBD;;AAzC4B;;AA6C/BjB,MAAM,CAACoB,SAAP,GAAmB;AACjBjB,EAAAA,IAAI,EAAEvB,SAAS,CAACyC,MAAV,CAAiBC,UADN;AAEjBd,EAAAA,MAAM,EAAE5B,SAAS,CAACyC,MAAV,CAAiBC,UAFR;AAGjBX,EAAAA,OAAO,EAAE/B,SAAS,CAACyC,MAAV,CAAiBC,UAHT;AAIjBvC,EAAAA,UAAU,EAAEH,SAAS,CAAC2C,IAAV,CAAeD,UAJV;AAKjBtC,EAAAA,YAAY,EAAEJ,SAAS,CAAC2C,IAAV,CAAeD;AALZ,CAAnB;;AAQA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCtB,EAAAA,IAAI,EAAEsB,KAAK,CAACtB;AADsB,CAAZ,CAAxB;;AAIA,MAAMuB,iBAAiB,GAAG;AACxB3C,EAAAA,UADwB;AAExBC,EAAAA;AAFwB,CAA1B;AAKA,eAAeF,OAAO,CAAC0C,eAAD,EAAkBE,iBAAlB,CAAP,CAA4CzC,UAAU,CAACM,MAAD,CAAV,CAAmBS,MAAnB,CAA5C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport PropTypes from 'prop-types';\nimport myButton from '../util/myButton';\n\n//REDUX\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../redux/actions/dataActions'\n\n//MUI\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Typography } from '@material-ui/core';\n\n//Icons\nimport ChatIcon from '@material-ui/icons/Chat'\n\nconst styles = {\n  card: {\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200,\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n}\n\nclass Scream extends Component {\n  likedScream = () => {\n    if(\n      this.props.user.likes && \n      this.props.user.likes.find(\n        (like) => like.screamId === this.props.scream.screamId\n      )\n    ) \n      return true;\n    else return false;\n  }\n  likeScream = () => {\n    \n  }\n  render() {\n    dayjs.extend(relativeTime)\n    const { classes, scream : { body, createdAt, userImage, userHandle, screamId, likeCount, commentCount } } = this.props\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n        image={userImage}\n        className={classes.image}\n        title=\"Profile Image\" />\n        <CardContent className={classes.content}>\n          <Typography \n            variant=\"h5\" \n            component={Link} \n            to={`/users/${userHandle}`}\n            >\n              {userHandle}\n            </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\n          <Typography variant=\"body1\">{body}</Typography>\n          {likeButton}\n          <span>{likeCount} Likes</span>\n          <myButton tip=\"comments\" />\n          <ChatIcon color=\"primary\" />\n          <span>{commentCount} Comments</span>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));"]},"metadata":{},"sourceType":"module"}