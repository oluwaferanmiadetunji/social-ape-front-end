{"ast":null,"code":"var _jsxFileName = \"/home/afe/Documents/project/social-ape/social-ape-client/src/components/Scream.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton'; //REDUX\n\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../redux/actions/dataActions'; //MUI\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Typography } from '@material-ui/core'; //Icons\n\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nconst styles = {\n  card: {\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n};\n\nclass Scream extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.likedScream = () => {\n      if (this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.scream.screamId)) return true;else return false;\n    };\n\n    this.likeScream = () => {\n      this.props.likeScream(this.props.scream.screamId);\n    };\n\n    this.unlikeScream = () => {\n      this.props.unlikeScream(this.props.scream.screamId);\n    };\n  }\n\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        screamId,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated\n      }\n    } = this.props;\n    const likeButton = !authenticated ? /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteBorderIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }))) : this.likedScream() ? /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Unlike\",\n      onClick: this.unlikeScream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })) : /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"Like\",\n      onClick: this.likeScream,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FavoriteBorderIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      image: userImage,\n      className: classes.image,\n      title: \"Profile Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: Link,\n      to: `/users/${userHandle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, userHandle), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, dayjs(createdAt).fromNow()), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, body), likeButton, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, likeCount, \" Likes\"), /*#__PURE__*/React.createElement(\"myButton\", {\n      tip: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ChatIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, commentCount, \" Comments\")));\n  }\n\n}\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));","map":{"version":3,"sources":["/home/afe/Documents/project/social-ape/social-ape-client/src/components/Scream.js"],"names":["React","Component","Link","dayjs","relativeTime","PropTypes","MyButton","connect","likeScream","unlikeScream","withStyles","Card","CardContent","CardMedia","Typography","ChatIcon","FavoriteIcon","FavoriteBorderIcon","styles","card","display","marginBottom","image","minWidth","content","padding","objectFit","Scream","likedScream","props","user","likes","find","like","screamId","scream","render","extend","classes","body","createdAt","userImage","userHandle","likeCount","commentCount","authenticated","likeButton","fromNow","propTypes","object","isRequired","func","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton'\n\n//REDUX\nimport { connect } from 'react-redux';\nimport { likeScream, unlikeScream } from '../redux/actions/dataActions'\n\n//MUI\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Typography } from '@material-ui/core';\n\n//Icons\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nconst styles = {\n  card: {\n    display: 'flex',\n    marginBottom: 20\n  },\n  image: {\n    minWidth: 200,\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n}\n\nclass Scream extends Component {\n  likedScream = () => {\n    if(\n      this.props.user.likes && \n      this.props.user.likes.find(\n        (like) => like.screamId === this.props.scream.screamId\n      )\n    ) \n      return true;\n    else return false;\n  }\n  likeScream = () => {\n    this.props.likeScream(this.props.scream.screamId);\n  }\n  unlikeScream = () => {\n    this.props.unlikeScream(this.props.scream.screamId);\n  }\n  render() {\n    dayjs.extend(relativeTime)\n    const { \n      classes, \n      scream : { \n        body, \n        createdAt, \n        userImage, \n        userHandle, \n        screamId, \n        likeCount, \n        commentCount \n      },\n      user: {\n        authenticated\n      }\n    } = this.props;\n    const likeButton = !authenticated ? (\n      <MyButton tip=\"Like\">\n        <Link to=\"/login\">\n          <FavoriteBorderIcon color=\"primary\" />\n        </Link>\n      </MyButton>\n    ) : (\n      this.likedScream() ? (\n        <MyButton tip=\"Unlike\" onClick={this.unlikeScream}>\n          <FavoriteIcon color=\"primary\" />\n        </MyButton>\n      ) : (\n        <MyButton tip=\"Like\" onClick={this.likeScream}>\n          <FavoriteBorderIcon color=\"primary\" />\n        </MyButton>\n      )\n    )\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n        image={userImage}\n        className={classes.image}\n        title=\"Profile Image\" />\n        <CardContent className={classes.content}>\n          <Typography \n            variant=\"h5\" \n            component={Link} \n            to={`/users/${userHandle}`}\n            >\n              {userHandle}\n            </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\n          <Typography variant=\"body1\">{body}</Typography>\n          {likeButton}\n          <span>{likeCount} Likes</span>\n          <myButton tip=\"comments\">\n            <ChatIcon color=\"primary\" />\n          </myButton>\n          <span >{commentCount} Comments</span>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  likeScream: PropTypes.func.isRequired,\n  unlikeScream: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));"]},"metadata":{},"sourceType":"module"}