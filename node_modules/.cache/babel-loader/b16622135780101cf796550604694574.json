{"ast":null,"code":"var _jsxFileName = \"/home/afe/Documents/project/Social Ape/social-ape-client/src/components/Scream.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DeleteScream from './DeleteScream';\nimport ScreamDialog from './ScreamDialog'; //REDUX\n\nimport { connect } from 'react-redux'; //MUI\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Typography } from '@material-ui/core'; //Icons\n\nimport ChatIcon from '@material-ui/icons/Chat';\nconst styles = {\n  card: {\n    display: 'flex',\n    marginBottom: 20,\n    position: 'relative'\n  },\n  image: {\n    minWidth: 200\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n};\n\nclass Scream extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.likedScream = () => {\n      if (this.props.user.likes && this.props.user.likes.find(like => like.screamId === this.props.scream.screamId)) return true;else return false;\n    };\n\n    this.likeScream = () => {\n      this.props.likeScream(this.props.scream.screamId);\n    };\n\n    this.unlikeScream = () => {\n      this.props.unlikeScream(this.props.scream.screamId);\n    };\n  }\n\n  render() {\n    dayjs.extend(relativeTime);\n    const {\n      classes,\n      scream: {\n        body,\n        createdAt,\n        userImage,\n        userHandle,\n        screamId,\n        likeCount,\n        commentCount\n      },\n      user: {\n        authenticated,\n        credentials: {\n          handle\n        }\n      }\n    } = this.props;\n    const deleteButton = authenticated && userHandle === handle ? /*#__PURE__*/React.createElement(DeleteScream, {\n      screamId: screamId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }) : null;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      image: userImage,\n      className: classes.image,\n      title: \"Profile Image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: Link,\n      to: `/users/${userHandle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, userHandle), deleteButton, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, dayjs(createdAt).fromNow()), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, body), likeButton, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, likeCount, \" Likes\"), /*#__PURE__*/React.createElement(MyButton, {\n      tip: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ChatIcon, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, commentCount, \" Comments\"), /*#__PURE__*/React.createElement(ScreamDialog, {\n      screamId: screamId,\n      userHandle: userHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n};\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));","map":{"version":3,"sources":["/home/afe/Documents/project/Social Ape/social-ape-client/src/components/Scream.js"],"names":["React","Component","Link","dayjs","relativeTime","PropTypes","MyButton","withStyles","DeleteScream","ScreamDialog","connect","Card","CardContent","CardMedia","Typography","ChatIcon","styles","card","display","marginBottom","position","image","minWidth","content","padding","objectFit","Scream","likedScream","props","user","likes","find","like","screamId","scream","likeScream","unlikeScream","render","extend","classes","body","createdAt","userImage","userHandle","likeCount","commentCount","authenticated","credentials","handle","deleteButton","fromNow","likeButton","propTypes","object","isRequired","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport PropTypes from 'prop-types';\nimport MyButton from '../util/MyButton'\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DeleteScream from './DeleteScream'\nimport ScreamDialog from './ScreamDialog'\n\n//REDUX\nimport { connect } from 'react-redux';\n\n//MUI\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { Typography } from '@material-ui/core';\n\n//Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n\nconst styles = {\n  card: {\n    display: 'flex',\n    marginBottom: 20,\n    position: 'relative'\n  },\n  image: {\n    minWidth: 200,\n  },\n  content: {\n    padding: 25,\n    objectFit: 'cover'\n  }\n}\n\nclass Scream extends Component {\n  likedScream = () => {\n    if(\n      this.props.user.likes && \n      this.props.user.likes.find(\n        (like) => like.screamId === this.props.scream.screamId\n      )\n    ) \n      return true;\n    else return false;\n  }\n  likeScream = () => {\n    this.props.likeScream(this.props.scream.screamId);\n  }\n  unlikeScream = () => {\n    this.props.unlikeScream(this.props.scream.screamId);\n  }\n  render() {\n    dayjs.extend(relativeTime)\n    const { \n      classes, \n      scream : { \n        body, \n        createdAt, \n        userImage, \n        userHandle, \n        screamId, \n        likeCount, \n        commentCount \n      },\n      user: {\n        authenticated,\n        credentials: {\n          handle\n        }\n      }\n    } = this.props;\n  \n    const deleteButton = authenticated && userHandle === handle ? (\n      <DeleteScream screamId={screamId} />\n    ) : null\n    return (\n      <Card className={classes.card}>\n        <CardMedia\n        image={userImage}\n        className={classes.image}\n        title=\"Profile Image\" />\n        <CardContent className={classes.content}>\n          <Typography \n            variant=\"h5\" \n            component={Link} \n            to={`/users/${userHandle}`}\n            >\n              {userHandle}\n            </Typography>\n            {deleteButton}\n          <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\n          <Typography variant=\"body1\">{body}</Typography>\n          {likeButton}\n          <span>{likeCount} Likes</span>\n          <MyButton tip=\"comments\">\n            <ChatIcon color=\"primary\" />\n          </MyButton>\n          <span >{commentCount} Comments</span>\n          <ScreamDialog screamId={screamId} userHandle={userHandle} />\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\n\nScream.propTypes = {\n  user: PropTypes.object.isRequired,\n  scream: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n})\n\nconst mapActionsToProps = {\n  likeScream,\n  unlikeScream\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Scream));"]},"metadata":{},"sourceType":"module"}