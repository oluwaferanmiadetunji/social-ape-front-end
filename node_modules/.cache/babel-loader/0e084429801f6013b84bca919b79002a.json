{"ast":null,"code":"import _objectSpread from\"/home/afe/Documents/project/Social Ape/social-ape-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{Fragment}from\"react\";import NoImg from\"../images/no-img.png\";//MUI\nimport Card from\"@material-ui/core/Card\";import CardMedia from\"@material-ui/core/CardMedia\";import CardContent from\"@material-ui/core/CardContent\";import withStyles from\"@material-ui/core/styles/withStyles\";var styles=function styles(theme){return _objectSpread({},theme.classes,{card:{display:\"flex\",marginBottom:20},cardContent:{width:\"100%\",flexDirection:\"column\",padding:25},cover:{minWidth:200,objectFit:\"cover\"},handle:{width:60,height:17,backgroundColor:theme.palette.primary.light,marginBottom:7},date:{height:15,width:100,backgroundColor:theme.palette.primary.light,marginBottom:10},fullLine:{height:15,width:\"90%\",backgroundColor:theme.palette.primary.light,marginBottom:10},halfLine:{height:15,width:\"50%\",backgroundColor:theme.palette.primary.light,marginBottom:10}});};var ScreamSkeleton=function ScreamSkeleton(props){var classes=props.classes;var content=Array.from({length:4}).map(function(item,index){return/*#__PURE__*/React.createElement(Card,{className:classes.card,key:index},/*#__PURE__*/React.createElement(CardMedia,{className:classes.cover,image:NoImg}),/*#__PURE__*/React.createElement(CardContent,{className:classes.cardContent},/*#__PURE__*/React.createElement(\"div\",{className:classes.handle}),/*#__PURE__*/React.createElement(\"div\",{className:classes.date}),/*#__PURE__*/React.createElement(\"div\",{className:classes.fullLine}),/*#__PURE__*/React.createElement(\"div\",{className:classes.fullLine}),/*#__PURE__*/React.createElement(\"div\",{className:classes.halfLine})));});return/*#__PURE__*/React.createElement(Fragment,null,content);};export default withStyles(styles)(ScreamSkeleton);","map":{"version":3,"sources":["/home/afe/Documents/project/Social Ape/social-ape-client/src/util/ScreamSkeleton.js"],"names":["React","Fragment","NoImg","Card","CardMedia","CardContent","withStyles","styles","theme","classes","card","display","marginBottom","cardContent","width","flexDirection","padding","cover","minWidth","objectFit","handle","height","backgroundColor","palette","primary","light","date","fullLine","halfLine","ScreamSkeleton","props","content","Array","from","length","map","item","index"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CAGA;AACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,0BACVA,KAAK,CAACC,OADI,EAEbC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CAEJC,YAAY,CAAE,EAFV,CAFO,CAMbC,WAAW,CAAE,CACXC,KAAK,CAAE,MADI,CAEXC,aAAa,CAAE,QAFJ,CAGXC,OAAO,CAAE,EAHE,CANA,CAWbC,KAAK,CAAE,CACLC,QAAQ,CAAE,GADL,CAELC,SAAS,CAAE,OAFN,CAXM,CAebC,MAAM,CAAE,CACNN,KAAK,CAAE,EADD,CAENO,MAAM,CAAE,EAFF,CAGNC,eAAe,CAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,KAHjC,CAINb,YAAY,CAAE,CAJR,CAfK,CAqBbc,IAAI,CAAE,CACJL,MAAM,CAAE,EADJ,CAEJP,KAAK,CAAE,GAFH,CAGJQ,eAAe,CAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,KAHnC,CAIJb,YAAY,CAAE,EAJV,CArBO,CA2Bbe,QAAQ,CAAE,CACRN,MAAM,CAAE,EADA,CAERP,KAAK,CAAE,KAFC,CAGRQ,eAAe,CAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,KAH/B,CAIRb,YAAY,CAAE,EAJN,CA3BG,CAiCbgB,QAAQ,CAAE,CACRP,MAAM,CAAE,EADA,CAERP,KAAK,CAAE,KAFC,CAGRQ,eAAe,CAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,KAH/B,CAIRb,YAAY,CAAE,EAJN,CAjCG,IAAf,CAyCA,GAAMiB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,IACxBrB,CAAAA,OADwB,CACZqB,KADY,CACxBrB,OADwB,CAEhC,GAAMsB,CAAAA,OAAO,CAAGC,KAAK,CAACC,IAAN,CAAW,CAAEC,MAAM,CAAE,CAAV,CAAX,EAA0BC,GAA1B,CAA8B,SAACC,IAAD,CAAOC,KAAP,qBAC5C,oBAAC,IAAD,EAAM,SAAS,CAAE5B,OAAO,CAACC,IAAzB,CAA+B,GAAG,CAAE2B,KAApC,eACE,oBAAC,SAAD,EAAW,SAAS,CAAE5B,OAAO,CAACQ,KAA9B,CAAqC,KAAK,CAAEf,KAA5C,EADF,cAEE,oBAAC,WAAD,EAAa,SAAS,CAAEO,OAAO,CAACI,WAAhC,eACE,2BAAK,SAAS,CAAEJ,OAAO,CAACW,MAAxB,EADF,cAEE,2BAAK,SAAS,CAAEX,OAAO,CAACiB,IAAxB,EAFF,cAGE,2BAAK,SAAS,CAAEjB,OAAO,CAACkB,QAAxB,EAHF,cAIE,2BAAK,SAAS,CAAElB,OAAO,CAACkB,QAAxB,EAJF,cAKE,2BAAK,SAAS,CAAElB,OAAO,CAACmB,QAAxB,EALF,CAFF,CAD4C,EAA9B,CAAhB,CAYA,mBAAO,oBAAC,QAAD,MAAWG,OAAX,CAAP,CACD,CAfD,CAqBA,cAAezB,CAAAA,UAAU,CAACC,MAAD,CAAV,CAAmBsB,cAAnB,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport NoImg from \"../images/no-img.png\";\nimport PropTypes from \"prop-types\";\n\n//MUI\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme) => ({\n  ...theme.classes,\n  card: {\n    display: \"flex\",\n    marginBottom: 20,\n  },\n  cardContent: {\n    width: \"100%\",\n    flexDirection: \"column\",\n    padding: 25,\n  },\n  cover: {\n    minWidth: 200,\n    objectFit: \"cover\",\n  },\n  handle: {\n    width: 60,\n    height: 17,\n    backgroundColor: theme.palette.primary.light,\n    marginBottom: 7,\n  },\n  date: {\n    height: 15,\n    width: 100,\n    backgroundColor: theme.palette.primary.light,\n    marginBottom: 10,\n  },\n  fullLine: {\n    height: 15,\n    width: \"90%\",\n    backgroundColor: theme.palette.primary.light,\n    marginBottom: 10,\n  },\n  halfLine: {\n    height: 15,\n    width: \"50%\",\n    backgroundColor: theme.palette.primary.light,\n    marginBottom: 10,\n  },\n});\n\nconst ScreamSkeleton = (props) => {\n  const { classes } = props;\n  const content = Array.from({ length: 4 }).map((item, index) => (\n    <Card className={classes.card} key={index}>\n      <CardMedia className={classes.cover} image={NoImg} />\n      <CardContent className={classes.cardContent}>\n        <div className={classes.handle} />\n        <div className={classes.date} />\n        <div className={classes.fullLine} />\n        <div className={classes.fullLine} />\n        <div className={classes.halfLine} />\n      </CardContent>\n    </Card>\n  ));\n  return <Fragment>{content}</Fragment>;\n};\n\nScreamSkeleton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ScreamSkeleton);\n"]},"metadata":{},"sourceType":"module"}