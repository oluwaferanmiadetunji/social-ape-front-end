{"ast":null,"code":"import { SET_SCREAMS, LIKE_SCREAM, UNLIKE_SCREAM, LOADING_DATA, POST_SCREAM, DELETE_SCREAM } from \"../types\";\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_DATA:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_SCREAMS:\n      return { ...state,\n        screams: action.payload,\n        loading: false\n      };\n\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex(scream => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n      return { ...state\n      };\n\n    case DELETE_SCREAM:\n      index = state.screams.findIndex(scream => scream.screamId === action.payload);\n      state.screams.splice(index, 1);\n      return { ...state\n      };\n\n    case POST_SCREAM:\n      return;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/afe/Documents/project/social-ape-client/src/redux/reducers/dataReducer.js"],"names":["SET_SCREAMS","LIKE_SCREAM","UNLIKE_SCREAM","LOADING_DATA","POST_SCREAM","DELETE_SCREAM","initialState","screams","scream","loading","state","action","type","payload","index","findIndex","screamId","splice"],"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,aANF,QAOO,UAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AACpD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE,OAFX;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,WAAL;AACA,SAAKC,aAAL;AACE,UAAIY,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CAAyBP,MAAD,IAAYA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAAP,CAAeG,QAAvE,CAAZ;AACAN,MAAAA,KAAK,CAACH,OAAN,CAAcO,KAAd,IAAuBH,MAAM,CAACE,OAA9B;AACA,aAAM,EACJ,GAAGH;AADC,OAAN;;AAGF,SAAKL,aAAL;AACES,MAAAA,KAAK,GAAGJ,KAAK,CAACH,OAAN,CAAcQ,SAAd,CAAyBP,MAAM,IAAIA,MAAM,CAACQ,QAAP,KAAoBL,MAAM,CAACE,OAA9D,CAAR;AACAH,MAAAA,KAAK,CAACH,OAAN,CAAcU,MAAd,CAAqBH,KAArB,EAA4B,CAA5B;AACA,aAAO,EACL,GAAGJ;AADE,OAAP;;AAGF,SAAKN,WAAL;AACE;;AACF;AACE,aAAOM,KAAP;AA5BJ;AA8BD","sourcesContent":["import { \n  SET_SCREAMS, \n  LIKE_SCREAM, \n  UNLIKE_SCREAM, \n  LOADING_DATA,\n  POST_SCREAM,\n  DELETE_SCREAM\n} from \"../types\"\n\nconst initialState = {\n  screams: [],\n  scream: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case LOADING_DATA:\n      return {\n        ...state,\n        loading: true\n      }\n    case SET_SCREAMS:\n      return {\n        ...state,\n        screams: action.payload,\n        loading: false\n      }\n    case LIKE_SCREAM:\n    case UNLIKE_SCREAM:\n      let index = state.screams.findIndex((scream) => scream.screamId === action.payload.screamId);\n      state.screams[index] = action.payload;\n      return{\n        ...state\n      }\n    case DELETE_SCREAM:\n      index = state.screams.findIndex((scream => scream.screamId === action.payload));\n      state.screams.splice(index, 1);\n      return {\n        ...state\n      }\n    case POST_SCREAM:\n      return \n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}